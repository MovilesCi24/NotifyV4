{"version":3,"sources":["webpack:///./src/app/settings/settings.module.ts","webpack:///./src/app/settings/settings.page.html","webpack:///./src/app/settings/settings.page.scss","webpack:///./src/app/settings/settings.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,8JAA8J,6xB;;;;;;;;;;;ACA9J,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACA;AACJ;AACC;AACK;AACJ;AACP;AAOzC;IAEE,sBACS,MAAoB,EACpB,IAAgB,EACf,OAAgB,EACjB,OAAqB,EACrB,OAAsB,EACtB,KAAkB;QALlB,WAAM,GAAN,MAAM,CAAc;QACpB,SAAI,GAAJ,IAAI,CAAY;QACf,YAAO,GAAP,OAAO,CAAS;QACjB,YAAO,GAAP,OAAO,CAAc;QACrB,YAAO,GAAP,OAAO,CAAe;QACtB,UAAK,GAAL,KAAK,CAAa;IACvB,CAAC;IAEL,+BAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YAChC,IAAG,GAAG,IAAE,EAAE,IAAE,GAAG,IAAE,GAAG,IAAE,GAAG,IAAE,IAAI,EAAC;aAE/B;iBAAI;gBACH,KAAI,CAAC,QAAQ,GAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,GAAC,GAAG,CAAC;aACxC;QACL,CAAC,CAAC,CAAC;IACH,CAAC;IACD,8BAAO,GAAP;QAAA,iBAWC;QAVC,IAAG,IAAI,CAAC,QAAQ,IAAE,EAAE,IAAE,IAAI,CAAC,QAAQ,IAAE,GAAG,IAAE,IAAI,CAAC,QAAQ,IAAE,IAAI,IAAE,IAAI,CAAC,QAAQ,IAAE,SAAS,EAAC;YACtF,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,oCAAoC,EAAC,CAAC,CAAC,CAAC;SACtE;aAAI;YACH,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,EAAC,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI;gBACrB,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC,CAAC;SACH;IACD,CAAC;IA/BU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kGAAmC;;SAEpC,CAAC;+EAIgB,6DAAa;YACf,yDAAW;YACN,sDAAO;YACT,4DAAa;YACb,+DAAc;YAChB,2DAAY;OARhB,YAAY,CAiCxB;IAAD,mBAAC;CAAA;AAjCwB","file":"settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-button slot=start color=\\\"danger\\\" fill=\\\"clear\\\" (click)=\\\"this.navCtrl.navigateRoot('/login');\\\"> <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon></ion-button>\\n      <ion-title style=\\\"text-align: center\\\" text-uppercase>Ajustes</ion-title>\\n      <ion-button slot=end color=\\\"white\\\" fill=\\\"clear\\\"> <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon></ion-button>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content class=\\\"Contenido\\\">\\n<ion-list>\\n  <div style=\\\"padding:0% 10px\\\">\\n      <ion-item >\\n          <ion-label position=\\\"fixed\\\">Url Servidor: </ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"Servidor\\\"></ion-input>\\n        </ion-item>\\n  </div>\\n</ion-list>\\n</ion-content>\\n<ion-footer>\\n    <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" color=\\\"medium\\\" (click)=\\\"Guardar()\\\">\\n     Guardar\\n</ion-button>\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../global.service';\nimport { PostService } from '../post.service';\nimport { NavController } from '@ionic/angular';\nimport { LoadingService } from '../loading.service';\nimport { AlertService } from '../alert.service';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\nServidor:any;\n  constructor(\n    public global:GlobalService,\n    public Post:PostService,\n    private storage: Storage,\n    public navCtrl:NavController,\n    public Loading:LoadingService,\n    public Alert:AlertService\n  ) { }\n\n  ngOnInit() {\n    this.storage.get('Ruta').then((val) => {\n      if(val==''||val==' '||val==null){\n        \n      }else{\n        this.Servidor=this.global.Servidor=val;\n      }\n  });\n  }\n  Guardar(){\n    if(this.Servidor==''||this.Servidor==' '||this.Servidor==null||this.Servidor==undefined){\n      this.Loading.LoadingNormal(\"Error, se encuentran campos vacios\",2);\n  }else{\n    this.Loading.LoadingNormal(\"Guardando Cambios\",3);\n    this.storage.set('Ruta',this.Servidor);\n    this.global.Servidor=this.Servidor;\n    this.Post.Refresh((data)=>{\n      this.navCtrl.navigateRoot('/login');\n    })\n  }\n  }\n\n}\n"],"sourceRoot":""}