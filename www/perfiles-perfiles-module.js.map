{"version":3,"sources":["webpack:///./src/app/perfiles/perfiles.module.ts","webpack:///./src/app/perfiles/perfiles.page.html","webpack:///./src/app/perfiles/perfiles.page.scss","webpack:///./src/app/perfiles/perfiles.page.ts"],"names":[],"mappings":"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","file":"perfiles-perfiles-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PerfilesPage } from './perfiles.page';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PerfilesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    NgxPaginationModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PerfilesPage]\n})\nexport class PerfilesPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-menu-toggle menu=\\\"first\\\" slot=\\\"start\\\">\\n          <ion-menu-button color=\\\"medium\\\" menumenu=\\\"first\\\"></ion-menu-button>\\n        </ion-menu-toggle>\\n      <ion-title style=\\\"text-align: center\\\" text-uppercase>\\n        Perfiles \\n      </ion-title>\\n      <ion-button slot=end color=\\\"white\\\" fill=\\\"clear\\\"></ion-button>\\n    </ion-toolbar>\\n    <ion-searchbar  [(ngModel)]=\\\"searchQuery\\\" placeholder=\\\"Buscar\\\" (ionInput)=\\\"getItems($event)\\\" animated=\\\"true\\\" color=\\\"medium\\\"></ion-searchbar>\\n  </ion-header>\\n\\n<ion-content class=\\\"Contenido\\\">\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content pullingIcon=\\\"md-arrow-dropdown\\\"\\n    pullingText=\\\"Desliza para Actualizar\\\"\\n    refreshingSpinner=\\\"lines\\\"\\n    refreshingText=\\\"Actualizando...\\\"></ion-refresher-content>\\n  </ion-refresher>\\n<ion-list>\\n    <ion-item-sliding #item *ngFor=\\\"let Per of Perfiles | paginate: { itemsPerPage: Items, currentPage: p };let i=index\\\">\\n        <ion-item-options side=\\\"start\\\">\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"DeleteProfile(Per.Id_ProfileEvent)\\\">Eliminar</ion-item-option>\\n        </ion-item-options>\\n        <ion-item (click)=\\\"DataPerfil(Per.Id_ProfileEvent,Per.Name)\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n                <img *ngIf=\\\"i%2==0\\\" src=\\\"./assets/imgs/Group.png\\\">\\n                <img *ngIf=\\\"i%2!=0\\\" src=\\\"./assets/imgs/Group2.png\\\">\\n              </ion-avatar>\\n            <ion-label>\\n                <h2>{{Per.Name}}</h2>\\n              </ion-label>\\n        </ion-item>\\n      </ion-item-sliding>\\n</ion-list>\\n</ion-content>\\n<ion-footer> \\n      <pagination-controls  (pageChange)=\\\"p = $event\\\"\\n          maxSize=\\\"5\\\"\\n          directionLinks=\\\"true\\\"\\n          autoHide=\\\"true\\\"\\n          responsive=\\\"true\\\"\\n          previousLabel=\\\"Anterior\\\"\\n          nextLabel=\\\"Siguiente\\\">\\n      </pagination-controls>\\n    <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" color=\\\"medium\\\" (click)=\\\"NewPerfil()\\\">\\n       Crear perfil\\n    </ion-button>\\n\\n</ion-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcmZpbGVzL3BlcmZpbGVzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../global.service';\nimport { PostService } from '../post.service';\nimport { NavController } from '@ionic/angular';\nimport { LoadingService } from '../loading.service';\nimport { AlertService } from '../alert.service';\n\n@Component({\n  selector: 'app-perfiles',\n  templateUrl: './perfiles.page.html',\n  styleUrls: ['./perfiles.page.scss'],\n})\nexport class PerfilesPage implements OnInit {\nPerfiles=new Array();\nPerfilesOri=new Array();\nsearchQuery: string = '';\nItems;\np: number = 1;\n  constructor(\n    public global:GlobalService,\n    public Post:PostService,\n    public navCtrl:NavController,\n    public Loading:LoadingService,\n    public Alert:AlertService\n  ) { \n    this.Items=this.global.Item;\n  }\n\n  ngOnInit() {\n    let data={\n      Option:\"SelectProfile\"\n    };\n    this.Post.Event(data,(err,data)=>{\n      console.log(data) ;\n      if(err==null){\n        this.PerfilesOri=this.Perfiles=JSON.parse(data.data);\n      }else{\n        this.Loading.HideLoading();\n        this.Alert.AlertOnebutton('Error',JSON.stringify(err.message));\n      }\n  });\n}\n\n\ngetItems(ev: any) {\n  this.initializeItems()\n  // set val to the value of the searchbar\n  const val = ev.target.value;\n\n  // if the value is an empty string don't filter the items\n  if (val && val.trim() != '') {\n    this.Perfiles = this.Perfiles.filter((item) => {\n      console.log(item)\n      return (item.Name.toLowerCase().indexOf(val.toLowerCase()) > -1);\n    })\n  }\n}\ninitializeItems() {\n  this.Perfiles=this.PerfilesOri;\n}\n\n\nDeleteProfile(Id){\n  let data={\n    Option:\"DeleteProfile\",\n    Id_ProfileEvent:Id\n  };\n  this.Post.Event(data,(err,data)=>{\n    console.log(data) ;\n    if(err==null){\n     this.ngOnInit();\n    }else{\n      this.Loading.HideLoading();\n      this.Alert.AlertOnebutton('Error',JSON.stringify(err.message));\n    }\n});\n}\n\nNewPerfil(){\n  this.navCtrl.navigateRoot('/new-perfil');\n}\nDataPerfil(i,name){\n  let id=i+'.'+name+'.perfiles';\n  this.navCtrl.navigateRoot('/vperfil-event/'+id); \n}\n\n  doRefresh(event){\n    setTimeout(() => {\n      let data={\n        Option:\"SelectProfile\"\n      };\n      this.Post.Event(data,(err,data)=>{\n        console.log(data) ;\n        if(err==null){\n          this.PerfilesOri=this.Perfiles=JSON.parse(data.data);\n          console.log('Async operation has ended');\n          event.target.complete();\n        }else{\n          this.Alert.AlertOnebutton('Error',JSON.stringify(err.message));\n          console.log('Async operation has ended');\n          event.target.complete();\n        }\n    });\n    }, 1000);\n  }\n}\n"],"sourceRoot":""}