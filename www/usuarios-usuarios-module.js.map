{"version":3,"sources":["webpack:///./src/app/usuarios/usuarios.module.ts","webpack:///./src/app/usuarios/usuarios.page.html","webpack:///./src/app/usuarios/usuarios.page.scss","webpack:///./src/app/usuarios/usuarios.page.ts"],"names":[],"mappings":"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","file":"usuarios-usuarios-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UsuariosPage } from './usuarios.page';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UsuariosPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxPaginationModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [UsuariosPage]\r\n})\r\nexport class UsuariosPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-menu-toggle menu=\\\"first\\\" slot=\\\"start\\\">\\r\\n          <ion-menu-button color=\\\"medium\\\" menumenu=\\\"first\\\"></ion-menu-button>\\r\\n        </ion-menu-toggle>\\r\\n      <ion-title style=\\\"text-align: center\\\" text-uppercase>\\r\\n        Usuarios \\r\\n      </ion-title>\\r\\n      <ion-button slot=end color=\\\"white\\\" fill=\\\"clear\\\"></ion-button>\\r\\n    </ion-toolbar>\\r\\n    <ion-searchbar  [(ngModel)]=\\\"searchQuery\\\" placeholder=\\\"Buscar\\\" (ionInput)=\\\"getItems($event)\\\" animated=\\\"true\\\" color=\\\"medium\\\"></ion-searchbar>\\r\\n  </ion-header>\\r\\n\\r\\n  <ion-content class=\\\"Contenido\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content pullingIcon=\\\"md-arrow-dropdown\\\"\\r\\n    pullingText=\\\"Desliza para Actualizar\\\"\\r\\n    refreshingSpinner=\\\"lines\\\"\\r\\n    refreshingText=\\\"Actualizando...\\\"></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n<ion-list>\\r\\n    <ion-item-sliding #item *ngFor=\\\"let User of Usuarios | paginate: { itemsPerPage: Items, currentPage: p };let i=index\\\">\\r\\n        <ion-item-options side=\\\"start\\\">\\r\\n          <ion-item-option *ngIf=\\\"User.IsActive==1\\\" color=\\\"danger\\\" (click)=\\\"Inactive(User.Id_User)\\\">Desactivar</ion-item-option>\\r\\n          <ion-item-option *ngIf=\\\"User.IsActive==0\\\" color=\\\"success\\\" (click)=\\\"Active(User.Id_User)\\\">Activar</ion-item-option>\\r\\n        </ion-item-options>\\r\\n        <ion-item>\\r\\n            <ion-avatar slot=\\\"start\\\">\\r\\n                <img *ngIf=\\\"i%2==0\\\" src=\\\"./assets/imgs/People1.png\\\">\\r\\n                <img *ngIf=\\\"i%2!=0\\\" src=\\\"./assets/imgs/People2.png\\\">\\r\\n              </ion-avatar>\\r\\n            <ion-label>\\r\\n                <h2 text-uppercase>{{User.UserName}}</h2>\\r\\n                <p>{{User.Company}}</p>\\r\\n              </ion-label>\\r\\n              <ion-badge *ngIf=\\\"User.IsActive==1\\\" color=\\\"success\\\" slot=end>Activo</ion-badge>\\r\\n              <ion-badge *ngIf=\\\"User.IsActive==0\\\" color=\\\"danger\\\" slot=end>Inactivo</ion-badge>\\r\\n        </ion-item>\\r\\n        <ion-item-options side=\\\"end\\\">\\r\\n          <ion-item-option color=\\\"tertiary\\\"(click)=\\\"VerData(User.Id_User,User.UserName)\\\">Perfiles</ion-item-option>\\r\\n        </ion-item-options>\\r\\n      </ion-item-sliding>\\r\\n</ion-list>\\r\\n</ion-content>\\r\\n<ion-footer>\\r\\n    <pagination-controls  (pageChange)=\\\"p = $event\\\"\\r\\n    maxSize=\\\"5\\\"\\r\\n    directionLinks=\\\"true\\\"\\r\\n    autoHide=\\\"true\\\"\\r\\n    responsive=\\\"true\\\"\\r\\n    previousLabel=\\\"Anterior\\\"\\r\\n    nextLabel=\\\"Siguiente\\\">\\r\\n</pagination-controls>\\r\\n</ion-footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzdWFyaW9zL3VzdWFyaW9zLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalService } from '../global.service';\r\nimport { PostService } from '../post.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { LoadingService } from '../loading.service';\r\nimport { AlertService } from '../alert.service';\r\n\r\n@Component({\r\n  selector: 'app-usuarios',\r\n  templateUrl: './usuarios.page.html',\r\n  styleUrls: ['./usuarios.page.scss'],\r\n})\r\nexport class UsuariosPage implements OnInit {\r\n  Usuarios=new Array();\r\n  UsuariosOri=new Array();\r\n  searchQuery: string = '';\r\n  Items;\r\n  p: number = 1;\r\n  constructor(\r\n    public global:GlobalService,\r\n    public Post:PostService,\r\n    public navCtrl:NavController,\r\n    public Loading:LoadingService,\r\n    public Alert:AlertService\r\n  ) { \r\n    this.Items=this.global.Item;\r\n  }\r\n\r\n  ngOnInit() {\r\n    let data={\r\n      Option:\"SelectUser\"\r\n    };\r\n    this.Post.Event(data,(err,data)=>{\r\n      console.log(data) ;\r\n      if(err==null){\r\n        this.UsuariosOri=this.Usuarios=JSON.parse(data.data);\r\n      }else{\r\n        this.Loading.HideLoading();\r\n        this.Alert.AlertOnebutton('Error',JSON.stringify(err.message));\r\n      }\r\n  });\r\n  }\r\n\r\n  getItems(ev: any) {\r\n    this.initializeItems()\r\n    // set val to the value of the searchbar\r\n    const val = ev.target.value;\r\n  \r\n    // if the value is an empty string don't filter the items\r\n    if (val && val.trim() != '') {\r\n      this.Usuarios = this.Usuarios.filter((item) => {\r\n        console.log(item)\r\n        return (item.Name.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n      })\r\n    }\r\n  }\r\n  initializeItems() {\r\n    this.Usuarios=this.UsuariosOri;\r\n  }\r\n\r\n  doRefresh(event){\r\n    setTimeout(() => {\r\n      let data={\r\n        Option:\"SelectUser\"\r\n      };\r\n      this.Post.Event(data,(err,data)=>{\r\n        console.log(data) ;\r\n        if(err==null){\r\n          this.Usuarios=this.Usuarios=JSON.parse(data.data);\r\n          console.log('Async operation has ended');\r\n          event.target.complete();\r\n          event\r\n        }else{\r\n          this.Alert.AlertOnebutton('Error',JSON.stringify(err.message));\r\n          console.log('Async operation has ended');\r\n          event.target.complete();\r\n        }\r\n    });\r\n    }, 1000);\r\n  }\r\n\r\n  VerData(Id_User,UserName){\r\n    let id=Id_User+'.'+UserName;\r\n    this.navCtrl.navigateRoot('/user-perfil/'+id); \r\n  }\r\n\r\n  Inactive(id){\r\n    let data={\r\n      Option:\"InactiveUser\",\r\n      Id_User:id\r\n    };\r\n    this.Post.Event(data,(err,data)=>{\r\n      console.log(data) ;\r\n      if(err==null){\r\n        this.ngOnInit();\r\n        event\r\n      }else{\r\n        this.Alert.AlertOnebutton('Error',JSON.stringify(err.message));\r\n      }\r\n  });\r\n  }\r\n\r\n  Active(id){\r\n    let data={\r\n      Option:\"ActiveUser\",\r\n      Id_User:id\r\n    };\r\n    this.Post.Event(data,(err,data)=>{\r\n      console.log(data) ;\r\n      if(err==null){\r\n        this.ngOnInit();\r\n        event\r\n      }else{\r\n        this.Alert.AlertOnebutton('Error',JSON.stringify(err.message));\r\n      }\r\n  });\r\n  }\r\n}\r\n"],"sourceRoot":""}